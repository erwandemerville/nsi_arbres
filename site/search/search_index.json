{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Arbres : structures de donn\u00e9es et algorithmes Bienvenue, ce cours se d\u00e9compose en plusieurs parties : Arbres : d\u00e9finitions et vocabulaire Parcours d'arbres binaires Type abstrait \"Arbre binaire\" ( \u00e0 venir ) Impl\u00e9mentation des arbres binaires ( \u00e0 venir ) Les arbres binaires de recherche ( \u00e0 venir ) Voici \u00e9galement des fiches d'exercices PDF pour vous entra\u00eener : Exercices - Vocabulaire sur les arbres Demerville Erwan Me contacter : demerville.erwan@gmail.com","title":"Arbres : structures de donn\u00e9es et algorithmes"},{"location":"#arbres-structures-de-donnees-et-algorithmes","text":"Bienvenue, ce cours se d\u00e9compose en plusieurs parties : Arbres : d\u00e9finitions et vocabulaire Parcours d'arbres binaires Type abstrait \"Arbre binaire\" ( \u00e0 venir ) Impl\u00e9mentation des arbres binaires ( \u00e0 venir ) Les arbres binaires de recherche ( \u00e0 venir ) Voici \u00e9galement des fiches d'exercices PDF pour vous entra\u00eener : Exercices - Vocabulaire sur les arbres Demerville Erwan Me contacter : demerville.erwan@gmail.com","title":"Arbres : structures de donn\u00e9es et algorithmes"},{"location":"parcours/","text":"Parcours d'arbres Un parcours d'arbre est une fa\u00e7on d' ordonner les noeuds d'un arbre afin de les parcourir . Voici un arbre binaire que l'on souhaite parcourir : Le parcours en largeur d'abord Le parcours en largeur consiste \u00e0 parcourir l'arbre niveau par niveau . Les noeuds de niveau 0 sont sont d'abord parcourus, puis les noeuds de niveau 1 , et ainsi de suite. Dans chaque niveau , les noeuds sont parcourus de gauche \u00e0 droite . Sur l'arbre ci-dessous : [E, B, G, A, D, F, H, C] Le parcours en profondeur d'abord Le parcours en profondeur d'un arbre est un type de parcours d'arbres qui consiste \u00e0 traiter la racine de l'arbre, et \u00e0 parcourir r\u00e9cursivement les sous-arbres gauche et droit de la racine. Les parcours pr\u00e9fixe , infixe et suffixe (\u00e9galement appel\u00e9 postfixe ) se distinguent par l'ordre dans lequel sont effectu\u00e9s ces traitements. Parcours pr\u00e9fixe - (Racine-Gauche-Droite) Dans le parcours pr\u00e9fixe , la racine est trait\u00e9e avant les appels r\u00e9cursifs sur le sous-arbre gauche , puis sur le sous-arbre droit . En se \"baladant\" autour de l'arbre (ordre de visite des noeuds en pointill\u00e9s), on liste chaque sommet la premi\u00e8re fois qu\u2019on le rencontre dans la balade. Sur l'arbre ci-dessous : [E, B, A, D, C, G, F, H] Parcours suffixe ou postfixe - (Gauche-Droite-Racine) Dans le parcours suffixe (ou postfixe), la racine est trait\u00e9e apr\u00e8s les appels r\u00e9cursifs sur le sous-arbre gauche puis sur le sous-arbre droit . En se \"baladant\" autour de l'arbre, on liste chaque sommet la derni\u00e8re fois qu\u2019on le rencontre dans la balade. Sur l'arbre ci-dessous : [A, C, D, B, F, H, G, E] Parcours infixe - (Gauche-Racine-Droite) Dans le parcours infixe , le traitement de la racine est effectu\u00e9 entre les appels sur les sous-arbres gauche et droit . En se \"baladant\" autour de l'arbre, on liste chaque sommet ayant un fils gauche la seconde fois qu\u2019on le voit et chaque sommet sans fils gauche la premi\u00e8re fois qu\u2019on le voit. Sur l'arbre ci-dessous : [A, B, C, D, E, F, G, H]","title":"Parcours d'arbres binaires"},{"location":"parcours/#parcours-darbres","text":"Un parcours d'arbre est une fa\u00e7on d' ordonner les noeuds d'un arbre afin de les parcourir . Voici un arbre binaire que l'on souhaite parcourir :","title":"Parcours d'arbres"},{"location":"parcours/#le-parcours-en-largeur-dabord","text":"Le parcours en largeur consiste \u00e0 parcourir l'arbre niveau par niveau . Les noeuds de niveau 0 sont sont d'abord parcourus, puis les noeuds de niveau 1 , et ainsi de suite. Dans chaque niveau , les noeuds sont parcourus de gauche \u00e0 droite . Sur l'arbre ci-dessous : [E, B, G, A, D, F, H, C]","title":"Le parcours en largeur d'abord"},{"location":"parcours/#le-parcours-en-profondeur-dabord","text":"Le parcours en profondeur d'un arbre est un type de parcours d'arbres qui consiste \u00e0 traiter la racine de l'arbre, et \u00e0 parcourir r\u00e9cursivement les sous-arbres gauche et droit de la racine. Les parcours pr\u00e9fixe , infixe et suffixe (\u00e9galement appel\u00e9 postfixe ) se distinguent par l'ordre dans lequel sont effectu\u00e9s ces traitements.","title":"Le parcours en profondeur d'abord"},{"location":"parcours/#parcours-prefixe-racine-gauche-droite","text":"Dans le parcours pr\u00e9fixe , la racine est trait\u00e9e avant les appels r\u00e9cursifs sur le sous-arbre gauche , puis sur le sous-arbre droit . En se \"baladant\" autour de l'arbre (ordre de visite des noeuds en pointill\u00e9s), on liste chaque sommet la premi\u00e8re fois qu\u2019on le rencontre dans la balade. Sur l'arbre ci-dessous : [E, B, A, D, C, G, F, H]","title":"Parcours pr\u00e9fixe - (Racine-Gauche-Droite)"},{"location":"parcours/#parcours-suffixe-ou-postfixe-gauche-droite-racine","text":"Dans le parcours suffixe (ou postfixe), la racine est trait\u00e9e apr\u00e8s les appels r\u00e9cursifs sur le sous-arbre gauche puis sur le sous-arbre droit . En se \"baladant\" autour de l'arbre, on liste chaque sommet la derni\u00e8re fois qu\u2019on le rencontre dans la balade. Sur l'arbre ci-dessous : [A, C, D, B, F, H, G, E]","title":"Parcours suffixe ou postfixe - (Gauche-Droite-Racine)"},{"location":"parcours/#parcours-infixe-gauche-racine-droite","text":"Dans le parcours infixe , le traitement de la racine est effectu\u00e9 entre les appels sur les sous-arbres gauche et droit . En se \"baladant\" autour de l'arbre, on liste chaque sommet ayant un fils gauche la seconde fois qu\u2019on le voit et chaque sommet sans fils gauche la premi\u00e8re fois qu\u2019on le voit. Sur l'arbre ci-dessous : [A, B, C, D, E, F, G, H]","title":"Parcours infixe - (Gauche-Racine-Droite)"},{"location":"vocabulaire/","text":"Arbres : d\u00e9finitions et vocabulaire Une structure hi\u00e9rarchique ? Exemple : La hi\u00e9rarchie (organigramme) d'une entreprise : Les arbres, pour quoi faire ? Exemple 1 : Lorsque l'interpr\u00e9teur Python lit un programme, il cr\u00e9e d'abord un arbre syntaxique utilisant la grammaire du langage. On ne pourrait en effet pas stocker ces donn\u00e9es dans une structure lin\u00e9aire sans y perdre la structuration du programme. def produit ( a : int , b : int ) -> int : s = 0 for i in range ( b ): s = s + a return s Exemple 2 : Arbre d'une page HTML < html > < head > < meta charset = \"utf-8\" > < title > Ma superbe page </ title > </ head > < body > < h1 > Mon super titre </ h1 > < p > Mon super paragraphe </ p > < img src = \"mon_image.png\" alt = \"ma superbe image\" /> </ body > < footer > < p > Un pied de page </ p > </ footer > </ html > Exemple 3 : Arborescence des fichiers sur Linux Source : pixees Les arbres D\u00e9finition Arbre : ensemble de noeuds organis\u00e9s de fa\u00e7on hi\u00e9rarchique \u00e0 partir d'un noeud appel\u00e9 racine . Un arbre est une structure de donn\u00e9es : hi\u00e9rarchique naturellement r\u00e9cursive Vocabulaire Un noeud est caract\u00e9ris\u00e9 par : une \u00e9tiquette (= valeur ou cl\u00e9 associ\u00e9e au noeud) si l'arbre est \u00e9tiquet\u00e9 , un nombre fini de fils . Le noeud initial est appel\u00e9 racine de l'arbre . Un noeud : est reli\u00e9 \u00e0 un noeud p\u00e8re par une ar\u00eate (parfois appel\u00e9e branche ) SAUF le noeud racine . peut avoir une ou plusieurs ar\u00eates sortantes le reliant \u00e0 ses noeuds fils . est appel\u00e9 feuille s'il n'a pas de fils . chemin - deux conventions : suite de noeuds cons\u00e9cutifs de l'arbre, de longueur \u00e9gale au nombre de noeuds du chemin. Sur l'arbre suivant, un chemin allant de A \u00e0 H serait [A, C, E, H] (longueur du chemin : 4 ). OU suite d' ar\u00eates cons\u00e9cutives de l'arbre, de longueur \u00e9gale au nombre d'ar\u00eates du chemin. Sur l'arbre suivant, un chemin allant de A \u00e0 H serait [A->C, C->E, E->H] (longueur du chemin : 3 ). Quelques mesures sur les arbres taille d'un arbre : nombre de noeuds de l\u2019arbre L'arbre ci-dessous a une taille de 8 (car 8 noeuds) . profondeur d\u2019un noeud - deux conventions : nombre de noeuds rencontr\u00e9s pour aller de la racine jusqu'\u00e0 ce noeud Sur l'arbre ci-dessous, la profondeur du noeud H est de 4 . OU nombre d\u2019 ar\u00eates rencontr\u00e9es pour aller de la racine jusqu'\u00e0 ce noeud Sur l'arbre ci-dessous, la profondeur du noeud H est de 3 . hauteur d\u2019un arbre : deux conventions : profondeur maximale des feuilles de l\u2019arbre (d\u00e9pend de la convention choisie pour la profondeur.) Sur l'arbre ci-dessous, la hauteur de l'arbre est la profondeur du noeud H , elle est donc de 4 ou de 3 selon la convention choisie. arit\u00e9/degr\u00e9 d\u2019un noeud : nombre de fils du noeud. arit\u00e9/degr\u00e9 d\u2019un arbre : nombre maximal de fils des noeuds de l\u2019arbre. Les arbres binaires D\u00e9finition : Un arbre binaire est un arbre dont chaque noeud comporte au plus deux fils . Un arbre binaire est : soit un arbre vide , qui ne contient aucun noeud . soit un arbre dont les noeuds sont structur\u00e9s de la mani\u00e8re suivante : un noeud est appel\u00e9 la racine de l'arbre, les noeuds restants sont s\u00e9par\u00e9s en deux ensembles qui forment r\u00e9cursivement deux sous-arbres , le sous-arbre gauche et le sous-arbre droit , la racine de l'arbre est reli\u00e9e \u00e0 la racine du sous-arbre gauche et \u00e0 la racine du sous-arbre droit . Arbres binaires particuliers Source : http://pascal.delahaye1.free.fr/cpge/informatique/cours%20projetes/cp08.pdf Un arbre binaire filiforme (ou d\u00e9g\u00e9n\u00e9r\u00e9 ) est un arbre dans lequel tous les noeuds internes n\u2019ont qu\u2019 un seul fils . (Un arbre filiforme ne poss\u00e8de donc qu\u2019 une seule feuille .) Un arbre binaire localement complet (ou arbre binaire strict ) est un arbre binaire dont tous les noeuds internes poss\u00e8dent exactement z\u00e9ro ou deux fils (l'arbre vide n'est pas localement complet). Un peigne gauche (respectivement peigne droit ) est un arbre binaire localement complet dans lequel tout fils droit (respectivement gauche ) est une feuille . Un arbre binaire parfait est un arbre binaire localement complet dans lequel tous les niveaux sont remplis (toutes les feuilles sont \u00e0 la m\u00eame profondeur). Un arbre binaire complet (ou presque complet ) est un arbre binaire dans lequel tous les niveaux sont remplis \u00e0 l\u2019exception \u00e9ventuelle du dernier , auquel cas les feuilles du dernier niveau sont align\u00e9es \u00e0 gauche . Un arbre binaire \u00e9quilibr\u00e9 est un arbre binaire tel que pour chaque noeud , le sous-arbre gauche et le sous-arbre droit ont une hauteur qui ne diff\u00e8re que de 1 au plus. Relations entre taille n et hauteur h Encadrement avec une profondeur 0 pour la racine : \u00c0 chaque niveau de l'arbre, le nombre de noeuds \\(n\\) est de \\(n = 2^{niveau}\\) , il en d\u00e9coule : Pour une taille n donn\u00e9e : \\(\\lfloor log_{2}(n) \\rfloor \\leq h \\leq n-1\\) h min lorsque arbre complet , h max lorsque arbre filiforme exemple si \\(n=12\\) : \\(3 \\leq h \\leq 11\\) Pour une hauteur h donn\u00e9e : \\(h+1 \\leq n \\leq 2^{h+1}-1\\) n min lorsque arbre filiforme , n max lorsque arbre parfait exemple si \\(h=5\\) : \\(6 \\leq h \\leq 63\\) Encadrement avec une profondeur 1 pour la racine : \u00c0 chaque niveau de l'arbre, le nombre de noeuds \\(n\\) est de \\(n = 2^{niveau-1}\\) , il en d\u00e9coule : Pour une taille n donn\u00e9e : \\(\\lceil log_{2}(n+1) \\rceil \\leq h \\leq n\\) h min lorsque arbre complet , h max lorsque arbre filiforme exemple si \\(n=12\\) : \\(4 \\leq h \\leq 12\\) Pour une hauteur h donn\u00e9e : \\(h \\leq n \\leq 2^{h}-1\\) n min lorsque arbre filiforme , n max lorsque arbre parfait exemple si \\(h=5\\) : \\(5 \\leq h \\leq 31\\)","title":"D\u00e9finitions et vocabulaire"},{"location":"vocabulaire/#arbres-definitions-et-vocabulaire","text":"","title":"Arbres : d\u00e9finitions et vocabulaire"},{"location":"vocabulaire/#une-structure-hierarchique","text":"Exemple : La hi\u00e9rarchie (organigramme) d'une entreprise :","title":"Une structure hi\u00e9rarchique ?"},{"location":"vocabulaire/#les-arbres-pour-quoi-faire","text":"Exemple 1 : Lorsque l'interpr\u00e9teur Python lit un programme, il cr\u00e9e d'abord un arbre syntaxique utilisant la grammaire du langage. On ne pourrait en effet pas stocker ces donn\u00e9es dans une structure lin\u00e9aire sans y perdre la structuration du programme. def produit ( a : int , b : int ) -> int : s = 0 for i in range ( b ): s = s + a return s Exemple 2 : Arbre d'une page HTML < html > < head > < meta charset = \"utf-8\" > < title > Ma superbe page </ title > </ head > < body > < h1 > Mon super titre </ h1 > < p > Mon super paragraphe </ p > < img src = \"mon_image.png\" alt = \"ma superbe image\" /> </ body > < footer > < p > Un pied de page </ p > </ footer > </ html > Exemple 3 : Arborescence des fichiers sur Linux Source : pixees","title":"Les arbres, pour quoi faire ?"},{"location":"vocabulaire/#les-arbres","text":"","title":"Les arbres"},{"location":"vocabulaire/#definition","text":"Arbre : ensemble de noeuds organis\u00e9s de fa\u00e7on hi\u00e9rarchique \u00e0 partir d'un noeud appel\u00e9 racine . Un arbre est une structure de donn\u00e9es : hi\u00e9rarchique naturellement r\u00e9cursive","title":"D\u00e9finition"},{"location":"vocabulaire/#vocabulaire","text":"Un noeud est caract\u00e9ris\u00e9 par : une \u00e9tiquette (= valeur ou cl\u00e9 associ\u00e9e au noeud) si l'arbre est \u00e9tiquet\u00e9 , un nombre fini de fils . Le noeud initial est appel\u00e9 racine de l'arbre . Un noeud : est reli\u00e9 \u00e0 un noeud p\u00e8re par une ar\u00eate (parfois appel\u00e9e branche ) SAUF le noeud racine . peut avoir une ou plusieurs ar\u00eates sortantes le reliant \u00e0 ses noeuds fils . est appel\u00e9 feuille s'il n'a pas de fils . chemin - deux conventions : suite de noeuds cons\u00e9cutifs de l'arbre, de longueur \u00e9gale au nombre de noeuds du chemin. Sur l'arbre suivant, un chemin allant de A \u00e0 H serait [A, C, E, H] (longueur du chemin : 4 ). OU suite d' ar\u00eates cons\u00e9cutives de l'arbre, de longueur \u00e9gale au nombre d'ar\u00eates du chemin. Sur l'arbre suivant, un chemin allant de A \u00e0 H serait [A->C, C->E, E->H] (longueur du chemin : 3 ).","title":"Vocabulaire"},{"location":"vocabulaire/#quelques-mesures-sur-les-arbres","text":"taille d'un arbre : nombre de noeuds de l\u2019arbre L'arbre ci-dessous a une taille de 8 (car 8 noeuds) . profondeur d\u2019un noeud - deux conventions : nombre de noeuds rencontr\u00e9s pour aller de la racine jusqu'\u00e0 ce noeud Sur l'arbre ci-dessous, la profondeur du noeud H est de 4 . OU nombre d\u2019 ar\u00eates rencontr\u00e9es pour aller de la racine jusqu'\u00e0 ce noeud Sur l'arbre ci-dessous, la profondeur du noeud H est de 3 . hauteur d\u2019un arbre : deux conventions : profondeur maximale des feuilles de l\u2019arbre (d\u00e9pend de la convention choisie pour la profondeur.) Sur l'arbre ci-dessous, la hauteur de l'arbre est la profondeur du noeud H , elle est donc de 4 ou de 3 selon la convention choisie. arit\u00e9/degr\u00e9 d\u2019un noeud : nombre de fils du noeud. arit\u00e9/degr\u00e9 d\u2019un arbre : nombre maximal de fils des noeuds de l\u2019arbre.","title":"Quelques mesures sur les arbres"},{"location":"vocabulaire/#les-arbres-binaires","text":"D\u00e9finition : Un arbre binaire est un arbre dont chaque noeud comporte au plus deux fils . Un arbre binaire est : soit un arbre vide , qui ne contient aucun noeud . soit un arbre dont les noeuds sont structur\u00e9s de la mani\u00e8re suivante : un noeud est appel\u00e9 la racine de l'arbre, les noeuds restants sont s\u00e9par\u00e9s en deux ensembles qui forment r\u00e9cursivement deux sous-arbres , le sous-arbre gauche et le sous-arbre droit , la racine de l'arbre est reli\u00e9e \u00e0 la racine du sous-arbre gauche et \u00e0 la racine du sous-arbre droit .","title":"Les arbres binaires"},{"location":"vocabulaire/#arbres-binaires-particuliers","text":"Source : http://pascal.delahaye1.free.fr/cpge/informatique/cours%20projetes/cp08.pdf Un arbre binaire filiforme (ou d\u00e9g\u00e9n\u00e9r\u00e9 ) est un arbre dans lequel tous les noeuds internes n\u2019ont qu\u2019 un seul fils . (Un arbre filiforme ne poss\u00e8de donc qu\u2019 une seule feuille .) Un arbre binaire localement complet (ou arbre binaire strict ) est un arbre binaire dont tous les noeuds internes poss\u00e8dent exactement z\u00e9ro ou deux fils (l'arbre vide n'est pas localement complet). Un peigne gauche (respectivement peigne droit ) est un arbre binaire localement complet dans lequel tout fils droit (respectivement gauche ) est une feuille . Un arbre binaire parfait est un arbre binaire localement complet dans lequel tous les niveaux sont remplis (toutes les feuilles sont \u00e0 la m\u00eame profondeur). Un arbre binaire complet (ou presque complet ) est un arbre binaire dans lequel tous les niveaux sont remplis \u00e0 l\u2019exception \u00e9ventuelle du dernier , auquel cas les feuilles du dernier niveau sont align\u00e9es \u00e0 gauche . Un arbre binaire \u00e9quilibr\u00e9 est un arbre binaire tel que pour chaque noeud , le sous-arbre gauche et le sous-arbre droit ont une hauteur qui ne diff\u00e8re que de 1 au plus.","title":"Arbres binaires particuliers"},{"location":"vocabulaire/#relations-entre-taille-n-et-hauteur-h","text":"","title":"Relations entre taille n et hauteur h"},{"location":"vocabulaire/#encadrement-avec-une-profondeur-0-pour-la-racine","text":"\u00c0 chaque niveau de l'arbre, le nombre de noeuds \\(n\\) est de \\(n = 2^{niveau}\\) , il en d\u00e9coule : Pour une taille n donn\u00e9e : \\(\\lfloor log_{2}(n) \\rfloor \\leq h \\leq n-1\\) h min lorsque arbre complet , h max lorsque arbre filiforme exemple si \\(n=12\\) : \\(3 \\leq h \\leq 11\\) Pour une hauteur h donn\u00e9e : \\(h+1 \\leq n \\leq 2^{h+1}-1\\) n min lorsque arbre filiforme , n max lorsque arbre parfait exemple si \\(h=5\\) : \\(6 \\leq h \\leq 63\\)","title":"Encadrement avec une profondeur 0 pour la racine\u00a0:"},{"location":"vocabulaire/#encadrement-avec-une-profondeur-1-pour-la-racine","text":"\u00c0 chaque niveau de l'arbre, le nombre de noeuds \\(n\\) est de \\(n = 2^{niveau-1}\\) , il en d\u00e9coule : Pour une taille n donn\u00e9e : \\(\\lceil log_{2}(n+1) \\rceil \\leq h \\leq n\\) h min lorsque arbre complet , h max lorsque arbre filiforme exemple si \\(n=12\\) : \\(4 \\leq h \\leq 12\\) Pour une hauteur h donn\u00e9e : \\(h \\leq n \\leq 2^{h}-1\\) n min lorsque arbre filiforme , n max lorsque arbre parfait exemple si \\(h=5\\) : \\(5 \\leq h \\leq 31\\)","title":"Encadrement avec une profondeur 1 pour la racine\u00a0:"}]}